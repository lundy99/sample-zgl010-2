
/*
 * Generated by OData VDM code generator of SAP Cloud SDK in version 3.60.0
 */

package com.mycompany.vdm.namespaces.es5;

import java.math.BigDecimal;
import java.util.List;
import java.util.Map;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.google.common.collect.Lists;
import com.google.common.collect.Maps;
import com.google.gson.annotations.JsonAdapter;
import com.mycompany.vdm.services.Es5Service;
import com.sap.cloud.sdk.datamodel.odata.client.request.ODataEntityKey;
import com.sap.cloud.sdk.datamodel.odatav4.core.DecimalDescriptor;
import com.sap.cloud.sdk.datamodel.odatav4.core.SimpleProperty;
import com.sap.cloud.sdk.datamodel.odatav4.core.VdmEntity;
import com.sap.cloud.sdk.datamodel.odatav4.core.VdmEntitySet;
import com.sap.cloud.sdk.result.ElementName;
import io.vavr.control.Option;
import lombok.AccessLevel;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;


/**
 * <p>Original entity name from the Odata EDM: <b>V_orders</b></p>
 * 
 */
@Builder
@Data
@NoArgsConstructor
@AllArgsConstructor
@ToString(doNotUseGetters = true, callSuper = true)
@EqualsAndHashCode(doNotUseGetters = true, callSuper = true)
@JsonAdapter(com.sap.cloud.sdk.datamodel.odatav4.adapter.GsonVdmAdapterFactory.class)
@JsonSerialize(using = com.sap.cloud.sdk.datamodel.odatav4.adapter.JacksonVdmObjectSerializer.class)
@JsonDeserialize(using = com.sap.cloud.sdk.datamodel.odatav4.adapter.JacksonVdmObjectDeserializer.class)
public class V_orders
    extends VdmEntity<V_orders>
    implements VdmEntitySet
{

    @Getter
    private final java.lang.String odataType = "OrdersServiceNoAuth.V_orders";
    /**
     * Selector for all available fields of V_orders.
     * 
     */
    public final static SimpleProperty<V_orders> ALL_FIELDS = all();
    /**
     * (Key Field) Constraints: Not nullable, Maximum length: 3 <p>Original property name from the Odata EDM: <b>MANDT</b></p>
     * 
     * @return
     *     SAPClientID
     */
    @Nullable
    @ElementName("MANDT")
    private java.lang.String sAPClientID;
    public final static SimpleProperty.String<V_orders> SAP_CLIENT_ID = new SimpleProperty.String<V_orders>(V_orders.class, "MANDT");
    /**
     * (Key Field) Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>ORDERID</b></p>
     * 
     * @return
     *     OrderID
     */
    @Nullable
    @ElementName("ORDERID")
    private java.lang.String orderID;
    public final static SimpleProperty.String<V_orders> ORDER_ID = new SimpleProperty.String<V_orders>(V_orders.class, "ORDERID");
    /**
     * Constraints: Nullable, Precision: 15, Scale: 2 <p>Original property name from the Odata EDM: <b>GROSSSALES</b></p>
     * 
     * @return
     *     GrossSales
     */
    @Nullable
    @ElementName("GROSSSALES")
    @DecimalDescriptor(precision = 15, scale = 2)
    private BigDecimal grossSales;
    public final static SimpleProperty.NumericDecimal<V_orders> GROSS_SALES = new SimpleProperty.NumericDecimal<V_orders>(V_orders.class, "GROSSSALES");
    /**
     * Constraints: Nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>CUSTOMERID</b></p>
     * 
     * @return
     *     CustomerID
     */
    @Nullable
    @ElementName("CUSTOMERID")
    private java.lang.String customerID;
    public final static SimpleProperty.String<V_orders> CUSTOMER_ID = new SimpleProperty.String<V_orders>(V_orders.class, "CUSTOMERID");
    /**
     * Constraints: Nullable, Maximum length: 50 <p>Original property name from the Odata EDM: <b>CUSTOMERNAME</b></p>
     * 
     * @return
     *     CustomerName
     */
    @Nullable
    @ElementName("CUSTOMERNAME")
    private java.lang.String customerName;
    public final static SimpleProperty.String<V_orders> CUSTOMER_NAME = new SimpleProperty.String<V_orders>(V_orders.class, "CUSTOMERNAME");
    /**
     * Constraints: Nullable, Maximum length: 50 <p>Original property name from the Odata EDM: <b>CITYNAME</b></p>
     * 
     * @return
     *     CityName
     */
    @Nullable
    @ElementName("CITYNAME")
    private java.lang.String cityName;
    public final static SimpleProperty.String<V_orders> CITY_NAME = new SimpleProperty.String<V_orders>(V_orders.class, "CITYNAME");
    /**
     * Constraints: Nullable, Maximum length: 50 <p>Original property name from the Odata EDM: <b>COUNTRYNAME</b></p>
     * 
     * @return
     *     CoutryName
     */
    @Nullable
    @ElementName("COUNTRYNAME")
    private java.lang.String coutryName;
    public final static SimpleProperty.String<V_orders> COUTRY_NAME = new SimpleProperty.String<V_orders>(V_orders.class, "COUNTRYNAME");
    /**
     * Navigation property <b>ORDERITEMS</b> for <b>V_orders</b> to multiple <b>V_orderitems</b>.
     * 
     */
    @ElementName("ORDERITEMS")
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private List<V_orderitems> toORDERITEMS;
    /**
     * Use with available request builders to apply the <b>ORDERITEMS</b> navigation property to query operations.
     * 
     */
    public final static com.sap.cloud.sdk.datamodel.odatav4.core.NavigationProperty.Collection<V_orders, V_orderitems> TO_ORDERITEMS = new com.sap.cloud.sdk.datamodel.odatav4.core.NavigationProperty.Collection<V_orders, V_orderitems>(V_orders.class, "ORDERITEMS", V_orderitems.class);

    /**
     * {@inheritDoc}
     * 
     */
    @Nonnull
    @Override
    public Class<V_orders> getType() {
        return V_orders.class;
    }

    /**
     * (Key Field) Constraints: Not nullable, Maximum length: 3 <p>Original property name from the Odata EDM: <b>MANDT</b></p>
     * 
     * @param sAPClientID
     *     SAPClientID
     */
    public void setSAPClientID(
        @Nullable
        final java.lang.String sAPClientID) {
        rememberChangedField("MANDT", this.sAPClientID);
        this.sAPClientID = sAPClientID;
    }

    /**
     * (Key Field) Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>ORDERID</b></p>
     * 
     * @param orderID
     *     OrderID
     */
    public void setOrderID(
        @Nullable
        final java.lang.String orderID) {
        rememberChangedField("ORDERID", this.orderID);
        this.orderID = orderID;
    }

    /**
     * Constraints: Nullable, Precision: 15, Scale: 2 <p>Original property name from the Odata EDM: <b>GROSSSALES</b></p>
     * 
     * @param grossSales
     *     GrossSales
     */
    public void setGrossSales(
        @Nullable
        final BigDecimal grossSales) {
        rememberChangedField("GROSSSALES", this.grossSales);
        this.grossSales = grossSales;
    }

    /**
     * Constraints: Nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>CUSTOMERID</b></p>
     * 
     * @param customerID
     *     CustomerID
     */
    public void setCustomerID(
        @Nullable
        final java.lang.String customerID) {
        rememberChangedField("CUSTOMERID", this.customerID);
        this.customerID = customerID;
    }

    /**
     * Constraints: Nullable, Maximum length: 50 <p>Original property name from the Odata EDM: <b>CUSTOMERNAME</b></p>
     * 
     * @param customerName
     *     CustomerName
     */
    public void setCustomerName(
        @Nullable
        final java.lang.String customerName) {
        rememberChangedField("CUSTOMERNAME", this.customerName);
        this.customerName = customerName;
    }

    /**
     * Constraints: Nullable, Maximum length: 50 <p>Original property name from the Odata EDM: <b>CITYNAME</b></p>
     * 
     * @param cityName
     *     CityName
     */
    public void setCityName(
        @Nullable
        final java.lang.String cityName) {
        rememberChangedField("CITYNAME", this.cityName);
        this.cityName = cityName;
    }

    /**
     * Constraints: Nullable, Maximum length: 50 <p>Original property name from the Odata EDM: <b>COUNTRYNAME</b></p>
     * 
     * @param coutryName
     *     CoutryName
     */
    public void setCoutryName(
        @Nullable
        final java.lang.String coutryName) {
        rememberChangedField("COUNTRYNAME", this.coutryName);
        this.coutryName = coutryName;
    }

    @Override
    protected java.lang.String getEntityCollection() {
        return "V_orders";
    }

    @Nonnull
    @Override
    protected ODataEntityKey getKey() {
        final ODataEntityKey entityKey = super.getKey();
        entityKey.addKeyProperty("MANDT", getSAPClientID());
        entityKey.addKeyProperty("ORDERID", getOrderID());
        return entityKey;
    }

    @Nonnull
    @Override
    protected Map<java.lang.String, Object> toMapOfFields() {
        final Map<java.lang.String, Object> values = super.toMapOfFields();
        values.put("MANDT", getSAPClientID());
        values.put("ORDERID", getOrderID());
        values.put("GROSSSALES", getGrossSales());
        values.put("CUSTOMERID", getCustomerID());
        values.put("CUSTOMERNAME", getCustomerName());
        values.put("CITYNAME", getCityName());
        values.put("COUNTRYNAME", getCoutryName());
        return values;
    }

    @Override
    protected void fromMap(final Map<java.lang.String, Object> inputValues) {
        final Map<java.lang.String, Object> values = Maps.newHashMap(inputValues);
        // simple properties
        {
            if (values.containsKey("MANDT")) {
                final Object value = values.remove("MANDT");
                if ((value == null)||(!value.equals(getSAPClientID()))) {
                    setSAPClientID(((java.lang.String) value));
                }
            }
            if (values.containsKey("ORDERID")) {
                final Object value = values.remove("ORDERID");
                if ((value == null)||(!value.equals(getOrderID()))) {
                    setOrderID(((java.lang.String) value));
                }
            }
            if (values.containsKey("GROSSSALES")) {
                final Object value = values.remove("GROSSSALES");
                if ((value == null)||(!value.equals(getGrossSales()))) {
                    setGrossSales(((BigDecimal) value));
                }
            }
            if (values.containsKey("CUSTOMERID")) {
                final Object value = values.remove("CUSTOMERID");
                if ((value == null)||(!value.equals(getCustomerID()))) {
                    setCustomerID(((java.lang.String) value));
                }
            }
            if (values.containsKey("CUSTOMERNAME")) {
                final Object value = values.remove("CUSTOMERNAME");
                if ((value == null)||(!value.equals(getCustomerName()))) {
                    setCustomerName(((java.lang.String) value));
                }
            }
            if (values.containsKey("CITYNAME")) {
                final Object value = values.remove("CITYNAME");
                if ((value == null)||(!value.equals(getCityName()))) {
                    setCityName(((java.lang.String) value));
                }
            }
            if (values.containsKey("COUNTRYNAME")) {
                final Object value = values.remove("COUNTRYNAME");
                if ((value == null)||(!value.equals(getCoutryName()))) {
                    setCoutryName(((java.lang.String) value));
                }
            }
        }
        // structured properties
        {
        }
        // navigation properties
        {
            if ((values).containsKey("ORDERITEMS")) {
                final Object value = (values).remove("ORDERITEMS");
                if (value instanceof Iterable) {
                    if (toORDERITEMS == null) {
                        toORDERITEMS = Lists.newArrayList();
                    } else {
                        toORDERITEMS = Lists.newArrayList(toORDERITEMS);
                    }
                    int i = 0;
                    for (Object item: ((Iterable<?> ) value)) {
                        if (!(item instanceof Map)) {
                            continue;
                        }
                        V_orderitems entity;
                        if (toORDERITEMS.size()>i) {
                            entity = toORDERITEMS.get(i);
                        } else {
                            entity = new V_orderitems();
                            toORDERITEMS.add(entity);
                        }
                        i = (i + 1);
                        @SuppressWarnings("unchecked")
                        final Map<java.lang.String, Object> inputMap = ((Map<java.lang.String, Object> ) item);
                        entity.fromMap(inputMap);
                    }
                }
            }
        }
        super.fromMap(values);
    }

    @Override
    protected java.lang.String getDefaultServicePath() {
        return Es5Service.DEFAULT_SERVICE_PATH;
    }

    @Nonnull
    @Override
    protected Map<java.lang.String, Object> toMapOfNavigationProperties() {
        final Map<java.lang.String, Object> values = super.toMapOfNavigationProperties();
        if (toORDERITEMS!= null) {
            (values).put("ORDERITEMS", toORDERITEMS);
        }
        return values;
    }

    /**
     * Retrieval of associated <b>V_orderitems</b> entities (one to many). This corresponds to the OData navigation property <b>ORDERITEMS</b>.
     * <p>
     * If the navigation property for an entity <b>V_orders</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>ORDERITEMS</b> is already loaded, the result will contain the <b>V_orderitems</b> entities. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<List<V_orderitems>> getORDERITEMSIfPresent() {
        return Option.of(toORDERITEMS);
    }

    /**
     * Overwrites the list of associated <b>V_orderitems</b> entities for the loaded navigation property <b>ORDERITEMS</b>.
     * <p>
     * If the navigation property <b>ORDERITEMS</b> of a queried <b>V_orders</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param value
     *     List of <b>V_orderitems</b> entities.
     */
    public void setORDERITEMS(
        @Nonnull
        final List<V_orderitems> value) {
        if (toORDERITEMS == null) {
            toORDERITEMS = Lists.newArrayList();
        }
        toORDERITEMS.clear();
        toORDERITEMS.addAll(value);
    }

    /**
     * Adds elements to the list of associated <b>V_orderitems</b> entities. This corresponds to the OData navigation property <b>ORDERITEMS</b>.
     * <p>
     * If the navigation property <b>ORDERITEMS</b> of a queried <b>V_orders</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param entity
     *     Array of <b>V_orderitems</b> entities.
     */
    public void addORDERITEMS(V_orderitems... entity) {
        if (toORDERITEMS == null) {
            toORDERITEMS = Lists.newArrayList();
        }
        toORDERITEMS.addAll(Lists.newArrayList(entity));
    }


    /**
     * Helper class to allow for fluent creation of V_orders instances.
     * 
     */
    public final static class V_ordersBuilder {

        private List<V_orderitems> toORDERITEMS = Lists.newArrayList();

        private V_orders.V_ordersBuilder toORDERITEMS(final List<V_orderitems> value) {
            toORDERITEMS.addAll(value);
            return this;
        }

        /**
         * Navigation property <b>ORDERITEMS</b> for <b>V_orders</b> to multiple <b>V_orderitems</b>.
         * 
         * @param value
         *     The V_orderitemss to build this V_orders with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public V_orders.V_ordersBuilder orderitemS(V_orderitems... value) {
            return toORDERITEMS(Lists.newArrayList(value));
        }

    }

}
