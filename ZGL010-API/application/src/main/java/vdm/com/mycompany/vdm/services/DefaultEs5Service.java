
/*
 * Generated by OData VDM code generator of SAP Cloud SDK in version 3.60.0
 */

package com.mycompany.vdm.services;

import java.util.HashMap;
import java.util.Map;
import javax.annotation.Nonnull;
import javax.inject.Named;
import com.mycompany.vdm.namespaces.es5.V_orderitems;
import com.mycompany.vdm.namespaces.es5.V_orders;
import com.sap.cloud.sdk.datamodel.odatav4.core.BatchRequestBuilder;
import com.sap.cloud.sdk.datamodel.odatav4.core.CountRequestBuilder;
import com.sap.cloud.sdk.datamodel.odatav4.core.CreateRequestBuilder;
import com.sap.cloud.sdk.datamodel.odatav4.core.DeleteRequestBuilder;
import com.sap.cloud.sdk.datamodel.odatav4.core.GetAllRequestBuilder;
import com.sap.cloud.sdk.datamodel.odatav4.core.GetByKeyRequestBuilder;
import com.sap.cloud.sdk.datamodel.odatav4.core.ServiceWithNavigableEntities;
import com.sap.cloud.sdk.datamodel.odatav4.core.UpdateRequestBuilder;
import lombok.Getter;


/**
 * <h3>Details:</h3><table summary='Details'><tr><td align='right'>OData Service:</td><td>es5</td></tr></table>
 * 
 */
@Named("com.mycompany.vdm.services.DefaultEs5Service")
public class DefaultEs5Service
    implements Es5Service, ServiceWithNavigableEntities
{

    @Nonnull
    @Getter
    private final String servicePath;

    /**
     * Creates a service using {@link Es5Service#DEFAULT_SERVICE_PATH} to send the requests.
     * 
     */
    public DefaultEs5Service() {
        servicePath = Es5Service.DEFAULT_SERVICE_PATH;
    }

    /**
     * Creates a service using the provided service path to send the requests.
     * <p>
     * Used by the fluent {@link #withServicePath(String)} method.
     * 
     */
    private DefaultEs5Service(
        @Nonnull
        final String servicePath) {
        this.servicePath = servicePath;
    }

    @Override
    @Nonnull
    public DefaultEs5Service withServicePath(
        @Nonnull
        final String servicePath) {
        return new DefaultEs5Service(servicePath);
    }

    @Override
    @Nonnull
    public BatchRequestBuilder batch() {
        return new BatchRequestBuilder(servicePath);
    }

    @Override
    @Nonnull
    public GetAllRequestBuilder<V_orders> getAllV_orders() {
        return new GetAllRequestBuilder<V_orders>(servicePath, V_orders.class, "V_orders");
    }

    @Override
    @Nonnull
    public CountRequestBuilder<V_orders> countV_orders() {
        return new CountRequestBuilder<V_orders>(servicePath, V_orders.class, "V_orders");
    }

    @Override
    @Nonnull
    public GetByKeyRequestBuilder<V_orders> getV_ordersByKey(
        @Nonnull
        final String sAPClientID,
        @Nonnull
        final String orderID) {
        final Map<String, Object> key = new HashMap<String, Object>();
        key.put("MANDT", sAPClientID);
        key.put("ORDERID", orderID);
        return new GetByKeyRequestBuilder<V_orders>(servicePath, V_orders.class, key, "V_orders");
    }

    @Override
    @Nonnull
    public CreateRequestBuilder<V_orders> createV_orders(
        @Nonnull
        final V_orders v_orders) {
        return new CreateRequestBuilder<V_orders>(servicePath, v_orders, "V_orders");
    }

    @Override
    @Nonnull
    public UpdateRequestBuilder<V_orders> updateV_orders(
        @Nonnull
        final V_orders v_orders) {
        return new UpdateRequestBuilder<V_orders>(servicePath, v_orders, "V_orders");
    }

    @Override
    @Nonnull
    public DeleteRequestBuilder<V_orders> deleteV_orders(
        @Nonnull
        final V_orders v_orders) {
        return new DeleteRequestBuilder<V_orders>(servicePath, v_orders, "V_orders");
    }

    @Override
    @Nonnull
    public GetAllRequestBuilder<V_orderitems> getAllV_orderitems() {
        return new GetAllRequestBuilder<V_orderitems>(servicePath, V_orderitems.class, "V_orderitems");
    }

    @Override
    @Nonnull
    public CountRequestBuilder<V_orderitems> countV_orderitems() {
        return new CountRequestBuilder<V_orderitems>(servicePath, V_orderitems.class, "V_orderitems");
    }

    @Override
    @Nonnull
    public GetByKeyRequestBuilder<V_orderitems> getV_orderitemsByKey(
        @Nonnull
        final String sAPClientID,
        @Nonnull
        final String orderID,
        @Nonnull
        final Integer orderItemID) {
        final Map<String, Object> key = new HashMap<String, Object>();
        key.put("MANDT", sAPClientID);
        key.put("ORDERID", orderID);
        key.put("ORDERITEMID", orderItemID);
        return new GetByKeyRequestBuilder<V_orderitems>(servicePath, V_orderitems.class, key, "V_orderitems");
    }

    @Override
    @Nonnull
    public CreateRequestBuilder<V_orderitems> createV_orderitems(
        @Nonnull
        final V_orderitems v_orderitems) {
        return new CreateRequestBuilder<V_orderitems>(servicePath, v_orderitems, "V_orderitems");
    }

    @Override
    @Nonnull
    public UpdateRequestBuilder<V_orderitems> updateV_orderitems(
        @Nonnull
        final V_orderitems v_orderitems) {
        return new UpdateRequestBuilder<V_orderitems>(servicePath, v_orderitems, "V_orderitems");
    }

    @Override
    @Nonnull
    public DeleteRequestBuilder<V_orderitems> deleteV_orderitems(
        @Nonnull
        final V_orderitems v_orderitems) {
        return new DeleteRequestBuilder<V_orderitems>(servicePath, v_orderitems, "V_orderitems");
    }

}
